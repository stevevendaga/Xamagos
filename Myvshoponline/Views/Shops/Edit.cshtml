@model Myvshoponline.Shop

@{
    ViewBag.Title = "Edit Shop Details";
    MyvshoponlineEntities db = new MyvshoponlineEntities();
}
<style>
    .h5 {
        color: black !important;
    }

    .control-label col-md-2 {
        color: black !important;
    }
</style>
<style>
    p {
        color: black;
        font-weight: bold;
    }
</style>



      
<div id="content">
    <h5 style="font-size:14px"  class="h5"><a href="~/Users/BusinessLanding/@Session["UserID"]"><i class="lni-user"></i> @Model.User.CompanyName </a> &raquo; Edit Shop</h5>

    <!-- Content section Start -->
    <section class="section" style="padding:10px">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-9 col-md-12 col-xs-12">
                    <div class="post-job box">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.ID)
                            @Html.HiddenFor(model=>model.DateCreated)
                            @Html.HiddenFor(model => model.EnableOnlineOrder)
                            @Html.HiddenFor(model => model.UserID)
                            @Html.HiddenFor(model => model.ShopStatus)
                            @Html.HiddenFor(model => model.EnableOnlinePayment)
                            <form class="form-ad" method="post" action="~/Shops/Create" name="form">
                                    <div class="form-group">
                                    @*<input type="text" name="Name" class="form-control" placeholder="Full Shop Name" required="required">*@
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Full Shop Name",@readonly="readonly", @required = "required", @onkeyup = "this.value = this.value.toUpperCase()" } })
                                    @if (ViewBag.ShopExist != null)
                                    {<h5 class="alert alert-danger" style="color:red;font-size:12px">@ViewBag.ShopExist </h5>
                                    }
                                </div>

                                <div class="row" style="margin-bottom:5px">
                                    @Html.HiddenFor(model => model.ShopURL, new { htmlAttributes = new { @class = "form-control", @placeholder = "Online Shop Address", @required = "required", @onkeypress = "avoidSplChars(event)" } })
                                    @*<div class="col-md-6">
                                        <p style="padding:0px;font-size:10px;line-height:1.2em;font-family:Arial">
                                            Online Shop Address:
                                            e.g DaflewFotos. Your online shop address is in this form - <a href="#">myvshoponline.com/Shops/?shopURL=DaflewFotos</a>
                                        </p>
                                        @Html.EditorFor(model => model.ShopURL, new { htmlAttributes = new { @class = "form-control", @placeholder = "Online Shop Address", @required = "required", @onkeypress = "avoidSplChars(event)" } })
                                        @if (ViewBag.ShopURL != null)
                                        {<h5 class="alert alert-danger" style="color:red;font-size:12px">@ViewBag.ShopURL </h5>
                                        }
                                    </div>*@
                                    <div class="col-md-12">
                                        <textarea class="form-control" rows="2" name="Description" placeholder="Shop Description" id="comment">@Model.Description</textarea>
                                    </div>

                                </div>

                                <div class="row" style="margin-bottom:5px">
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone Number", @required = "required" } })
                                    </div>
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email", @required = "required", @type = "email" } })
                                    </div>
                                </div>

                                <div class="row" style="margin-bottom:5px">
                                    <div class="col-md-6">
                                        <textarea class="form-control" rows="2" name="Address" id="comment" placeholder="Shop Address" required="required">@Model.Address</textarea>
                                    </div>
                                    <div class="col-md-6">
                                        @*<input class="form-control form-control-navbar" id="loadcountries" aria-label="Search" required="required" name="CountryID" type="text" placeholder="Country/Region">*@
                                        @Html.DropDownList("CountryID", null, "-- Choose Country/Region --", htmlAttributes: new { @class = "form-control", @required = "required", @onchange = "displaystateInput(this.value)" })
                                    </div>
                                    <div class="col-md-6">
                                        @*<input type="text" id="loadStates" name="StateID" class="form-control form-control-navbar" placeholder="State" required />*@
                                        <div id="displaystate">
                                            @{ int SID=Convert.ToInt32(Model.StateID);
                                                var state = db.States.Find(SID).Name;
                                            }
<input type="text"  name="StateID" class="form-control form-control-navbar" placeholder="State" value="@state" id="loadStates" required />

                                        </div>
                                    </div>
                                    <button class="btn btn-common" style="margin-top:5px;margin-left:15px">Save</button>
                                </div>

                            </form>
                        }
                        </div>
                    </div>
                </div>
            </div>
        </section></div>
    <!-- Content section End -->





                            <script type="text/javascript">
                                function avoidSplChars(e) {
                                    e = e || window.event;
                                    var bad = /[^\sa-z\d]/i,
                                        key = String.fromCharCode(e.keyCode || e.which);
                                    if (e.which !== 0 && e.charCode !== 0 && bad.test(key)) {
                                        e.returnValue = false;
                                        if (e.preventDefault) {
                                            e.preventDefault();
                                        }
                                    }
                                }
                            </script>

                            @section Scripts {
                                @Scripts.Render("~/bundles/jqueryval")
                            }

<script type="text/javascript">
    function displaystateInput(CountryID) {

                 var url = "/Shops/GetCountryName/";
                 $.ajax({
                     url: url,
                     data: { CountryID: CountryID },
                     cache: false,
                     type: "GET",
                     success: function (data) {
                         var html = '';
                         $.each(data, function (key, item) {
                             if (item.CountryName == "Nigeria") {
                                 GetStates(CountryID);
                             }
                             else {
                                 html +='<input type="text" id="city" name="StateID" class="form-control" placeholder="State/City" required="required" />';
                             }
                         });
                         $("#displaystate").html(html).show();

                     },
                     error: function (reponse) {
                         alert("error : " + reponse);
                     }
                 });
             }
</script>
<script type="text/javascript">
    function GetStates(CountryID) {

                 var url = "/Shops/GetStates/";
                 $.ajax({
                     url: url,
                     data: { CountryID: CountryID },
                     cache: false,
                     type: "GET",
                     success: function (data) {
                         var html = '';
                         html += '<span><select name="StateID" class="form-control">';
                         html += '<option selected disabled>-- Select State --</option>';
                         $.each(data, function (key, item) {

                             html += "<option value='" + item.ID + "'>" + item.StateName + "</option>";
                         });
                         html+='</select></span>';
                         $("#displaystate").html(html).show();

                     },
                     error: function (reponse) {
                         alert("error : " + reponse);
                     }
                 });
             }
</script>

<script type="text/javascript">
        $(function () {
            $("#loadcountries")
                .bind("keydown", function (event) {
                    if (event.keyCode === $.ui.keyCode.TAB &&
                    $(this).data("ui-autocomplete").menu.active) {
                        event.preventDefault();
                    }
                })
                .autocomplete({
                    minLength: 1,
                    source: function (request, response) {
                        $.getJSON("/Home/AutoLoadCountries", {
                            term: extractLast(request.term)
                        }, response);
                    },
                });
        });
        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }
</script>

<script type="text/javascript">
        $(function () {
            $("#loadStates")
                .bind("keydown", function (event) {
                    if (event.keyCode === $.ui.keyCode.TAB &&
                    $(this).data("ui-autocomplete").menu.active) {
                        event.preventDefault();
                    }
                })
                .autocomplete({
                    minLength: 1,
                    source: function (request, response) {
                        $.getJSON("/Home/AutoLoadStates", {
                            term: extractLast(request.term)
                        }, response);
                    },
                });
        });
        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }
</script>