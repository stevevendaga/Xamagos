@model Myvshoponline.ProductSubProduct

@{
    ViewBag.Title = "Edit";
}
<br /><br /><br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.ProductID)
        <!-- Content section Start -->
        <section class="section" style="padding:10px">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-lg-8 col-md-12 col-xs-12">
                        <div class="post-job box">
                            <form class="form-ad" method="post" action="~/ProductSubProducts/Create" enctype="multipart/form-data">

                             
                                <div class="form-horizontal" style="background-color:white">
                                    <h5 style="font-size:14px" class="h5">
                                        <a href="~/Users/BusinessLanding/@Model.Product.Shop.UserID"><i class="lni-user"></i> @ViewBag.CompanyName </a> &raquo;<b style="color:black"><a href="~/Shops/ShopDetails/@ViewBag.ShopID"> @ViewBag.ShopName </a></b>
                                        <p></p>
                                        <i class="lni-add-files"></i>
                                        <b style="color:black">Add Sub-item for @ViewBag.ProductName</b>
                                    </h5>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Name" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-10">
                                            <textarea class="textarea" name="Details" required="required" placeholder="Product Description">@Model.Details</textarea>                                        
    @*@Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control", @placeholder = "Product Description" } })*@
                                            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <input type="hidden" name="ProductID" value="@ViewBag.ProductID" />
                                    @*<div class="form-group">
                                        @Html.LabelFor(model => model.ProductID, "ProductID", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("ProductID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@


                                    <div class="col-md-12">

                                        <div class="row" style="margin-bottom:5px;">
                                            <div class="col-md-5">
                                                @Html.DropDownList("ProductStatusID", null, "-- Select Product Status --", htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ProductStatusID, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-md-5" style="margin-left:0px;">
                                                @Html.EditorFor(model => model.QuantityinStock, new { htmlAttributes = new { @class = "form-control", @placeholder = "Quantity in Stock", @min = "1" } })
                                                @Html.ValidationMessageFor(model => model.QuantityinStock, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>


                                    @*<div class="form-group">
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.QuantityinStock, new { htmlAttributes = new { @class = "form-control", @placeholder = "Quantity in Stock" } })
                                            @Html.ValidationMessageFor(model => model.QuantityinStock, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @placeholder = "Amount" } })
                                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-5">
                                            @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Enter Purchase Price", @min = "1" } })
                                            @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-5">
                                            <select name="Currency" class="form-control" required="required">
                                                <option selected>@Model.Currency</option>
                                                <option value="USD">
                                                    USD - US Dollar
                                                </option>
                                                <option value="NGN">
                                                    NGN - Nigerian Naira
                                                </option>

                                                <option value="EUR">
                                                    EUR - Euro
                                                </option>
                                                <option value="GBP">
                                                    GBP - British Pound
                                                </option>
                                                <option value="AUD">
                                                    AUD - Australian Dollar
                                                </option>
                                                <option value="CAD">
                                                    CAD - Canadian Dollar
                                                </option>
                                                <option value="JPY">
                                                    JPY - Japanese Yen
                                                </option>
                                                <option value="SGD">
                                                    SGD - Singapore Dollar
                                                </option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="row" style="padding-left:15px">
                                        <div class="col-md-3">
                                     <input type="submit" value="Save" class="btn btn-common"/>
                                        </div>
                                    </div>

                                </div>
                            </form>

                        </div>
                    </div>
                </div>
            </div>
        </section>
}
        <script type="text/javascript">
                    function CheckFileName() {
                        var fileName = document.getElementById("uploadFile").value
                        //debugger;
                        if (fileName == "") {
                            alert("Browse to upload a valid File with jpg/jpeg/gif/png");
                            return false;
                        }
                        else if (fileName.split(".")[1].toUpperCase() == "JPG" || fileName.split(".")[1].toUpperCase() == "JPEG" || fileName.split(".")[1].toUpperCase() == "GIF" || fileName.split(".")[1].toUpperCase() == "PNG")
                            return true;
                        else {
                            alert("File with " + fileName.split(".")[1] + " is invalid. Upload a valid file with jpg/jpeg/gif/png");
                            return false;
                        }
                        return true;
                    }
        </script>


        <script type="text/javascript">
    var maxSize = '15';
    function fileSizeValidate(fdata) {
        if (fdata.files && fdata.files[0]) {
            var fsize = fdata.files[0].size / 1024;
            if (fsize > maxSize) {
                alert('Maximum file size exceeded! Image size should not be larger than 15KB');
                document.getElementById("uploadFile").value = null;
                return false;
            } else {
                return true;
            }
        }
    }

        </script>

        <script type="text/javascript">
    var minSize = '12';
    function fileSizeValidateMin(fdata) {
        if (fdata.files && fdata.files[0]) {
            var fsize = fdata.files[0].size / 1024;
            if (fsize < minSize) {
                alert('Minimum file size not reached! Image size should not be less than 12KB');
                document.getElementById("uploadFile").value = null;
                return false;
            } else {
                return true;
            }
        }
    }
        </script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
