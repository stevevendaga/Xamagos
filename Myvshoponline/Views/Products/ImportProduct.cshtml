@model Myvshoponline.Product
@using Myvshoponline.Controllers;
@{ MyvshoponlineEntities db = new MyvshoponlineEntities(); }

@{
    ViewBag.Title = "Create Product";
    int ShopID = ViewBag.ShopID;
    string PricingPlan = db.Shops.Where(p => p.ID == ShopID).Select(p => p.User.PricingPlan.PlanName).FirstOrDefault();
    int NumberofProducts = (int)db.PricingPlans.Where(p => p.PlanName == PricingPlan).Select(p => p.NumberofProducts).FirstOrDefault();
    int TotalNumberofProducts = db.Products.Where(s => s.ShopID == ShopID).Count();
}

<div id="content">
    <h5 style="font-size:14px"  class="h5"> <a href="~/Users/BusinessLanding/@ViewBag.UserID"><i class="lni-user"></i> @ViewBag.CompanyName </a> &raquo;<b style="color:black"><a href="~/Shops/ShopDetails/@ViewBag.ShopID"> @ViewBag.ShopName </a> &raquo; </b><b style="color:black">Create New Product</b></h5>

    <style>
        p {
            color: black;
            font-weight: bold;
        }
    </style>

    <!-- Content section Start -->
    <section class="section" style="padding:10px">
        <div class="container">
            <div class="row justify-content-center">
                @if (TotalNumberofProducts >= NumberofProducts)
                {
                    <br />
                        <span style="color:red;font-size:11px;" class="alert alert-danger">
                            Maximun number of products reached for your current plan for this shop.
                        </span>
                }
                @if (ViewBag.TotalNumberofProductsExceeded!=null)
                {
                    <br />
                    <span style="color:red;font-size:11px;" class="alert alert-danger">
                        Maximun number of products reached for your current plan for this shop.
                    </span>
                }
                
                <div class="col-lg-8 col-md-12 col-xs-12">
                   
                    <div class="post-job box">
                      
                        <form class="form-ad" method="post" action="~/Products/Create" enctype="multipart/form-data">
                            @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                   
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <input type="hidden" name="ShopID" value="@ViewBag.ShopID" />
                            @if (ViewBag.ProductExist != null)
                            {
                                <h5 class="alert alert-danger" style="font-size:14px">@ViewBag.ProductExist </h5>
                            }
                                    <div class="form-group">
                                 
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control",@required="required",@id="titlecase",@placeholder= "Product Name"} })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        <textarea rows="3" name="Details" required="required" class="form-control" placeholder= "Product Description"></textarea>
                                            @*@Html.TextArea("Details", new { htmlAttributes = new { @class = "form-control", @required = "required" } })*@
                                            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                                        
                                    </div>
                                    <div class="row" style="margin-bottom:5px;">
                                        <div class="col-md-5">
                                            @Html.DropDownList("ProductCategoryID", null, "-- Select Category --", htmlAttributes: new { @class = "form-control", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.ProductCategoryID, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-5">
                                            @Html.DropDownList("ProductStatusID", null, "-- Select Product Status --", htmlAttributes: new { @class = "form-control", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.ProductStatusID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-5">
                                           @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Enter Selling Price", @min = "1" } })
                                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-5">
                                            @Html.EditorFor(model => model.QuantityinStock, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Enter Quantity in Stock" ,@min="1"} })
                                            @Html.ValidationMessageFor(model => model.QuantityinStock, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                            <div class="row">
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Amount Purchased", @min = "1" } })
                                    @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-5">
                                   <select name="Currency" class="form-control" required="required">
                                       <option selected disabled >Choose Currency</option>
                                       <option value="US $">
                                           USD - US Dollar
                                       </option>
                                       <option value="NGN">
                                           NGN - Nigerian Naira
                                       </option>
                                     
                                       <option value="EUR">
                                          EUR - Euro
                                       </option>
                                       <option value="GBP">
                                           GBP - British Pound
                                       </option>
                                       <option value="AUD">
                                           AUD - Australian Dollar
                                       </option>
                                       <option value="CAD">
                                           CAD - Canadian Dollar
                                       </option>
                                       <option value="JPY">
                                           JPY - Japanese Yen
                                       </option>
                                       <option value="SGD">
                                           SGD - Singapore Dollar
                                       </option>
                                   </select>
                                </div>
                            </div>
                                   
                                          <div class="row" style="background-color:#F2F7FB;margin-top:5px;">
                                             
                                        
                                        <div class="col-md-5">
                                            <strong style="color:black">Product Picture</strong>
                                            <input type="file" name="files" id="uploadFile" style="width:100%;background-color:#F2F7FB" class="btn btn-default" />
                                        </div>
@if (TotalNumberofProducts < NumberofProducts)
{
                                        <div class="col-md-3" style="padding-top:10px">
                                            <input type="submit" value="Add Product" class="btn btn-common" onclick="return CheckFileName();" />
                                        </div>
}
                                    </div>
                                    
                                    
                                           
                                        
                                </div></form>
                          </div></div></div></div></section> </div>

                            @section Scripts {
                                @Scripts.Render("~/bundles/jqueryval")
                            }

<script type="text/javascript">
                    function CheckFileName() {
                        var fileName = document.getElementById("uploadFile").value
                        //debugger;
                        if (fileName == "") {
                            alert("Browse to upload a valid File with jpg/jpeg/gif/png");
                            return false;
                        }
                        else if (fileName.split(".")[1].toUpperCase() == "JPG" || fileName.split(".")[1].toUpperCase() == "JPEG" || fileName.split(".")[1].toUpperCase() == "GIF" || fileName.split(".")[1].toUpperCase() == "PNG")
                            return true;
                        else {
                            alert("File with " + fileName.split(".")[1] + " is invalid. Upload a valid file with jpg/jpeg/gif/png");
                            return false;
                        }
                        return true;
                    }
</script>


<script type="text/javascript">
    var maxSize = '15';
    function fileSizeValidate(fdata) {
        if (fdata.files && fdata.files[0]) {
            var fsize = fdata.files[0].size / 1024;
            if (fsize > maxSize) {
                alert('Maximum file size exceeded! Image size should not be larger than 15KB');
                document.getElementById("uploadFile").value = null;
                return false;
            } else {
                return true;
            }
        }
    }
   
</script>

<script type="text/javascript">
    var minSize = '12';
    function fileSizeValidateMin(fdata) {
        if (fdata.files && fdata.files[0]) {
            var fsize = fdata.files[0].size / 1024;
            if (fsize < minSize) {
                alert('Minimum file size not reached! Image size should not be less than 12KB');
                document.getElementById("uploadFile").value = null;
                return false;
            } else {
                return true;
            }
        }
    }
</script>